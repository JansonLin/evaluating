<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.evaluating.mapper.ExamMapper" >

    <resultMap id="BaseResultMap" type="com.evaluating.model.Exam" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="e_name" property="eName" jdbcType="VARCHAR" />
        <result column="e_count" property="eCount" jdbcType="INTEGER" />
        <result column="e_time" property="eTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, e_name, e_count, e_time
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.evaluating.model.ExamExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from e_exam
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from e_exam
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from e_exam
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.evaluating.model.ExamExample" >
        delete from e_exam
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.evaluating.model.Exam" >
        insert into e_exam (id, e_name, e_count, 
            e_time)
        values (#{id,jdbcType=INTEGER}, #{eName,jdbcType=VARCHAR}, #{eCount,jdbcType=INTEGER}, 
            #{eTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.evaluating.model.Exam" >
        insert into e_exam
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="eName != null" >
                e_name,
            </if>
            <if test="eCount != null" >
                e_count,
            </if>
            <if test="eTime != null" >
                e_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="eName != null" >
                #{eName,jdbcType=VARCHAR},
            </if>
            <if test="eCount != null" >
                #{eCount,jdbcType=INTEGER},
            </if>
            <if test="eTime != null" >
                #{eTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.evaluating.model.ExamExample" resultType="java.lang.Integer" >
        select count(*) from e_exam
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update e_exam
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.eName != null" >
                e_name = #{record.eName,jdbcType=VARCHAR},
            </if>
            <if test="record.eCount != null" >
                e_count = #{record.eCount,jdbcType=INTEGER},
            </if>
            <if test="record.eTime != null" >
                e_time = #{record.eTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update e_exam
        set id = #{record.id,jdbcType=INTEGER},
            e_name = #{record.eName,jdbcType=VARCHAR},
            e_count = #{record.eCount,jdbcType=INTEGER},
            e_time = #{record.eTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.evaluating.model.Exam" >
        update e_exam
        <set >
            <if test="eName != null" >
                e_name = #{eName,jdbcType=VARCHAR},
            </if>
            <if test="eCount != null" >
                e_count = #{eCount,jdbcType=INTEGER},
            </if>
            <if test="eTime != null" >
                e_time = #{eTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.evaluating.model.Exam" >
        update e_exam
        set e_name = #{eName,jdbcType=VARCHAR},
            e_count = #{eCount,jdbcType=INTEGER},
            e_time = #{eTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>