<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	<!-- 启用shrio授权注解拦截方式 -->
	<bean id="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 装配 securityManager -->
		<property name="securityManager" ref="securityManager" />
		<!-- 配置登陆页面 -->
		<property name="loginUrl" value="/loginController/toLogin" />
		<!-- 无权限页面 -->
		<property name="unauthorizedUrl" value="/error/homepage.jsp"></property>
		<!-- 登陆成功后的页面 -->
		<property name="successUrl" value="http://localhost:8080/evaluating/user/toMain" />
		<!-- <property name="unauthorizedUrl" value="/jsp/unauthorized.jsp"/> -->
		<!-- 配置登出过滤器 -->
		<property name="filters">
            <map>
				<entry key="logout" value-ref="logoutFilter" />
            </map>
        </property>
		<!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截. -->
		<property name="filterChainDefinitions">
			<value>
				/loginController/**=anon
				/user/** = user
				/admin/** =roles[admin]
				/logout = logout
				<!-- /test = perms[act:model:edit] -->
			</value>
		</property>
	</bean>
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
	   <property name="redirectUrl" value="/loginController/toLogin" />
	</bean>
	<!-- 配置缓存管理器 -->
	<bean id="cacheManager"
		class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<!-- 指定 ehcache 的配置文件 -->
		<property name="cacheManagerConfigFile"
			value="classpath:ehcache-shiro.xml" />
	</bean>
	<!-- 配置进行授权和认证的 Realm -->
	<bean id="myRealm" class="com.evaluating.util.ShiroRealm" />
	
	
	<!-- 配置 Shiro 的 SecurityManager Bean. -->
	<bean id="securityManager"
		class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="cacheManager" />
		<property name="realm" ref="myRealm" />
		<property name="sessionMode" value="native" />
		<!-- 启用会话管理器 -->
		 <property name="sessionManager" ref="sessionManager"/> 
	</bean>
	
	
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionDAO" ref="sessionDAO" />

		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>
	
	<!-- 会话DAO -->  
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">  
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>  
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>  
    </bean>  
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	<!-- 配置sessionId避免与容器sessionID冲突 -->
	<bean id="sessionIdCookie"
		class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name"
			value="evaluating.session.id" />
	</bean>

	<!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
	<bean id="lifecycleBeanPostProcessor"
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>  